-- =====================================================
-- BC: Planning — request_inbox con surrogate key
-- =====================================================
CREATE TABLE IF NOT EXISTS planning.request_inbox (
    inbox_id         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    request_id       INTEGER      NOT NULL,  -- (luego será FK a Requests)
    company_id       INTEGER      NOT NULL,  -- FK a providers.companies
    matched_route_id INTEGER      NOT NULL,  -- FK a planning.provider_routes
    route_type_id    INTEGER      NOT NULL,  -- FK a planning.route_types (reemplaza match_kind)
    status           TEXT         NOT NULL,  -- 'OPEN' | 'CLOSED'
    created_at       TIMESTAMPTZ  NOT NULL,  -- lo setea la app (sin DEFAULT)

    CONSTRAINT pk_request_inbox_id PRIMARY KEY (inbox_id),

    -- Dedupe por compañía para una misma request
    CONSTRAINT uq_request_inbox_request_company UNIQUE (request_id, company_id),

    CONSTRAINT chk_request_inbox_status
    CHECK (status IN ('OPEN','CLOSED')),

    CONSTRAINT fk_inbox_route
    FOREIGN KEY (matched_route_id)
    REFERENCES planning.provider_routes(route_id)
    ON UPDATE CASCADE ON DELETE RESTRICT,

    CONSTRAINT fk_inbox_company
    FOREIGN KEY (company_id)
    REFERENCES providers.companies(company_id)
    ON UPDATE CASCADE ON DELETE RESTRICT,

    CONSTRAINT fk_inbox_route_type
    FOREIGN KEY (route_type_id)
    REFERENCES planning.route_types(route_type_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
    );

-- Índices para consultas
CREATE INDEX IF NOT EXISTS ix_inbox_company_status_created_at
    ON planning.request_inbox (company_id, status, created_at DESC);

CREATE INDEX IF NOT EXISTS ix_inbox_company_route_type
    ON planning.request_inbox (company_id, route_type_id);

CREATE INDEX IF NOT EXISTS ix_inbox_company_route
    ON planning.request_inbox (company_id, matched_route_id);

-- Refuerzos de matching (sin cambios)
CREATE INDEX IF NOT EXISTS ix_pr_match_pp
    ON planning.provider_routes (origin_province_code, dest_province_code, company_id)
    WHERE origin_province_code IS NOT NULL AND dest_province_code IS NOT NULL;

CREATE INDEX IF NOT EXISTS ix_pr_match_dd
    ON planning.provider_routes (origin_department_code, dest_department_code, company_id)
    WHERE origin_province_code IS NULL AND dest_province_code IS NULL;

CREATE INDEX IF NOT EXISTS ix_pr_company
    ON planning.provider_routes (company_id, route_type_id);
